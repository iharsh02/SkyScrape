services:
  reverse-proxy:
    image: traefik:v3.3
    ports:
      - "80:80"
      - "443:443" 
      - "8080:8080"
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /config/traefik.yaml:/etc/traefik/traefik.yaml:ro 
    networks:
      - web-external
    restart: unless-stopped
  skyscrape:
    image: ghcr.io/iharsh02/skyscrape:latest
 
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.skyscrape.tls=true"
      - "traefik.http.routers.skyscrape.tls.certresolver=cloudflare"
      - "traefik.http.routers.skyscrape.entrypoints=websecure"
      - "traefik.http.routers.skyscrape.rule=Host(`skyscrape.online`)"

    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_CLERK_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_URL}
      - NEXT_PUBLIC_CLERK_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_URL}
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - API_SECRET=${API_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
   
    networks:
      - web-external
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

    restart: unless-stopped
networks:
  web-external:
    external: true